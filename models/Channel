N2A.schema=3
$meta
 backend
  lems
   children
    conductanceScaling:Q10,baseConductanceScaling
    gates:Gate
   part:channelDensity,baseIonChannel,ionChannel,ionChannelHH,ionChannelVShift,ionChannelKS,channelPopulation,channelDensityVShift,channelDensityNernst,channelDensityGHK,channelDensityGHK2,channelDensityNonUniform,channelDensityNonUniformNernst,channelDensityNonUniformGHK
 gui
  category:Base/Compartment
 id:166b5f185735013e
 notes:Main class for ion channels. To use, create an instance and populate it with Gate objects.
$up.I:+I
E:0mV
 $meta
  backend
   lems
    param:erev
  param
G:Gall*fopen*Q10Scaling
 $meta
  backend
   lems
    param:g,geff
G1:0pS
 $meta
  backend
   lems
    param:conductance
  notes:The conductance of a single channel instance.
  param
Gall:Gdensity*surfaceArea
 $meta
  notes:|
   The conductance for an entire ensemble of channels.
   For population-based value, use: G1*population
   For density-based value, use: Gdensity*surfaceArea
   In the density case, this ion channel must be embedded in a compartment that provides surfaceArea.
Gdensity:0(mS/cm2)
 $meta
  backend
   lems
    param:condDensity
  param
I:G*(E-V)
 $meta
  backend
   lems
    param:i
Q10Scaling:*
 $meta
  backend
   lems
    param:conductanceScale
Vshift:0mV
 $meta
  backend
   lems
    param:vShift
  notes:For compatibility with NeuroML 2. Doesn't seem to do anything in the standard yet.
fopen:*
gDensity:Gdensity*fopen
 $meta
  notes:Only used for debugging output, particularly in models imported from NeuroML.
iDensity:gDensity*(E-V)
 $meta
  notes:Only used for debugging output, particularly in models imported from NeuroML.
population:1
 $meta
  backend
   lems
    param:number
  param
