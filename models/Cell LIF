N2A.schema=3
$inherit:Compartment
 $meta
  id:166b5f39bd266700
$meta
 backend
  lems
   part:iafCell,baseIaf,baseIafCapCell,iafRefCell
  stpu
   part:lif
 gui:
  category:Base/Cell
 id:166b015ccda9c699
 notes:|
  This is the base class for all LIF models, including those used for specific neuromorphic devices. One goal of this part hierarchy is to support translation between different LIF models, so that a model written for one device can be approximated by another.
  
  This requires that we handle translation both to and from the last common ancestor of the two models. It is not possible to support both directions of translation in the math itself, so we adopt the convention that the mathematical models handle translation up the inheritance hierarchy, while backends handle translation down the hierarchy.
  
  This means, in particular, that each descendant model that adds new parameters should provide expressions that compute reasonable values for parameters in the parent part. It is preferrable to implement new behavior via the parent's parameters. If that is not possible, then it is OK to override parent dynamics. The ideal outcome is that the parent's dynamics combined with its overridden parameters produce the closest approximation of child behavior that the parent can achieve.
E:Vinit
 $meta
  backend
   lems
    param:leakReversal
  param
G:3nS
 $meta
  backend
   lems
    param:leakConductance
  param
I:+G*(E-V)
V:
 @$init:Vinit
 @fire:Vreset
V':
 @:I/C
 @fire || ($t<refractoryEnd && refractoryPeriod):0(V/s)
Vreset:Vinit
 $meta
  backend
   lems
    param:reset
  param
refractoryEnd:$t+refractoryPeriod@fire
refractoryPeriod:0s
 $meta
  backend
   lems
    param:refract
  param
